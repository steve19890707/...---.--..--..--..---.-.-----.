{"version":3,"sources":["contact.js","App.js","reportWebVitals.js","index.js"],"names":["decode","value","combiner","reverse","map","v","wsad","decodeX","decodeURIComponent","hostname","window","location","GlobalStyle","createGlobalStyle","StyledApp","styled","div","App","useState","countdownDate","setCountdownDate","timesup","setTimesup","inputRef","useRef","useEffect","interval","setInterval","endDate","Date","update","countdown","now","moment","end","isBefore","alert","clearInterval","days","hours","minutes","seconds","className","src","alt","ref","placeholder","onClick","current","isAnswerMatch","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ff77c66f.chunk.js","sourcesContent":["const decode = (value) => {\n  let combiner = \"%\";\n  value.reverse().map((v) => (combiner += v));\n  return combiner;\n};\nconst d = [\"4\", \"A\", \"%\", \"E\", \"A\", \"%\", \"5\", \"E\"];\nconst w = [\"C\", \"9\", \"%\", \"6\", \"E\"];\nconst a = [\"0\", \"B\", \"%\", \"D\", \"A\"];\nconst s = [\"8\", \"E\", \"%\", \"3\", \"8\"];\nconst wsad = `${decode(w)}${decode(s)}${decode(a)}${decode(d)}`;\n\nexport const decodeX = () => {\n  return decodeURIComponent(`A${wsad}`);\n};\nexport const decodeS = () => {\n  return decodeURIComponent(`a${wsad}`);\n};\n","import { useState, useEffect, useRef } from \"react\";\nimport styled, { createGlobalStyle } from \"styled-components\";\nimport countdown from \"countdown\";\nimport moment from \"moment-timezone\";\nimport { IoTriangleOutline, IoCloseOutline } from \"react-icons/io5\";\nimport { BiSquare, BiCircle } from \"react-icons/bi\";\nimport { RiEyeLine } from \"react-icons/ri\";\nimport { decodeX, decodeS } from \"./contact\";\nconst hostname = window.location.hostname === \"localhost\" ? \"./puzzle/\" : \"./\";\nconst GlobalStyle = createGlobalStyle`\n  body {\n    padding: 0;\n    margin: 0 auto;\n    background-color:#f7f7f7;\n    max-width: 600px;\n  }\n`;\nconst StyledApp = styled.div`\n  margin-top: 50px;\n  header {\n    position: fixed;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 50px;\n    background: #fff;\n    box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);\n    z-index: 99;\n    font-family: \"Gemunu Libre\", sans-serif;\n    font-size: 24px;\n    letter-spacing: 6px;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    color: #a0a0a0;\n  }\n  .cd-title {\n    text-align: center;\n    margin: 0;\n    padding: 15px 0;\n    letter-spacing: 1px;\n    font-size: 18px;\n    color: #383838;\n  }\n  .answer {\n    font-size: 22px;\n    letter-spacing: 6px;\n    width: 100%;\n    text-align: center;\n  }\n  .count-down {\n    width: 80%;\n    margin: 0 auto;\n    text-align: center;\n    font-family: \"Gemunu Libre\", sans-serif;\n    font-size: 22px;\n    letter-spacing: 2px;\n    color: #383838;\n    padding: 6px;\n    box-sizing: border-box;\n    border-radius: 8px;\n    border: 1px solid #a0a0a0;\n    background: #fff;\n  }\n  .subtitle {\n    width: 80%;\n    margin: 0 auto;\n    color: #383838;\n    font-family: \"Gemunu Libre\", sans-serif;\n    font-size: 22px;\n    letter-spacing: 2px;\n  }\n  .subtitle-lose {\n    width: 80%;\n    margin: 0 auto 40px auto;\n    color: #ff6161;\n    font-family: \"Gemunu Libre\", sans-serif;\n    font-size: 32px;\n    font-weight: bold;\n    letter-spacing: 2px;\n    text-align: center;\n  }\n  .question {\n    padding: 15px 40px;\n    width: 80%;\n    margin: 30px auto;\n    border-radius: 8px;\n    box-sizing: border-box;\n    background: #fff;\n    height: 100px;\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    box-shadow: 0 0 5px rgba(0, 0, 0, 0.2);\n    &.answer {\n      margin: 15px auto 50px auto;\n    }\n    .sing {\n      font-size: 32px;\n    }\n    .mos {\n      max-width: 50%;\n    }\n    font-size: 18px;\n    .svg-IoCloseOutline {\n      width: 38px;\n      height: 38px;\n      fill: #000;\n    }\n    .svg-IoTriangleOutline {\n      width: 30px;\n      height: 30px;\n      fill: #000;\n    }\n    .svg-BiSquare {\n      width: 32px;\n      height: 32px;\n      fill: #000;\n    }\n    .svg-BiCircle {\n      width: 32px;\n      height: 32px;\n      fill: #000;\n    }\n    .svg-RiEyeLine {\n      width: 32px;\n      height: 32px;\n      fill: #000;\n    }\n    img {\n      height: 100%;\n    }\n  }\n  .input {\n    position: relative;\n    width: 80%;\n    margin: 30px auto 50px auto;\n  }\n  input::placeholder {\n    color: #c1c1c1;\n  }\n  input {\n    display: block;\n    width: 100%;\n    border-radius: 8px;\n    border: 0;\n    padding: 16px 20px;\n    font-size: 16px;\n    box-sizing: border-box;\n    outline: unset;\n    background: #dcdcdc;\n    color: #383838;\n  }\n  button {\n    position: absolute;\n    right: 10px;\n    top: 50%;\n    transform: translateY(-50%);\n    font-family: \"Gemunu Libre\", sans-serif;\n    color: #383838;\n    font-size: 18px;\n    border-radius: 6px;\n    border: 0;\n    box-sizing: border-box;\n    padding: 6px 12px;\n    background: #fff;\n  }\n`;\nfunction App() {\n  const [countdownDate, setCountdownDate] = useState(\"loading...\");\n  const [timesup, setTimesup] = useState(false);\n  const inputRef = useRef(null);\n  useEffect(() => {\n    const interval = setInterval(() => {\n      const endDate = new Date(2021, 9, 7, 14, 0, 0);\n      const update = countdown(new Date(), endDate, 0);\n      const now = new Date();\n      if (moment(update.end).isBefore(now)) {\n        alert(`Time's up! you lose!!`);\n        setCountdownDate(`--:--:--`);\n        setTimesup(true);\n        clearInterval(interval);\n        return;\n      }\n      setCountdownDate(\n        `${update.days} days ${update.hours}:${update.minutes}:${update.seconds}`\n      );\n      return () => clearInterval(interval);\n    }, 1000);\n  }, []);\n  return (\n    <StyledApp>\n      <GlobalStyle />\n      <header>\n        <span>Welecome</span>\n      </header>\n      {!timesup && (\n        <>\n          <p className=\"cd-title\">Time left:</p>\n          <div className=\"count-down\">{countdownDate}</div>\n          <div className=\"question\">\n            <BiCircle className=\"svg-BiCircle\" />\n            <div className=\"sing\">＝</div>\n            <div>IBKI</div>\n          </div>\n          <div className=\"question\">\n            <RiEyeLine className=\"svg-RiEyeLine\" />\n            <div className=\"sing\">＝</div>\n            <div>a, b, d, w</div>\n          </div>\n          <div className=\"question\">\n            <IoCloseOutline className=\"svg-IoCloseOutline\" />\n            <div className=\"sing\">＝</div>\n            <div>人一田日</div>\n          </div>\n          <div className=\"question\">\n            <IoTriangleOutline className=\"svg-IoTriangleOutline\" />\n            <div className=\"sing\">＝</div>\n            <img src={`${hostname}image/image.png`} alt=\"\" />\n          </div>\n          <div className=\"question\">\n            <BiSquare className=\"svg-BiSquare\" />\n            <div className=\"sing\">＝</div>\n            <div className=\"mos\">.-. --- --- --</div>\n          </div>\n        </>\n      )}\n      <p className=\"subtitle\">Answer:</p>\n      <div className=\"question answer\">\n        <IoTriangleOutline className=\"svg-IoTriangleOutline\" />\n        <IoCloseOutline className=\"svg-IoCloseOutline\" />\n        <BiCircle className=\"svg-BiCircle\" />\n        <BiSquare className=\"svg-BiSquare\" />\n      </div>\n      {timesup ? (\n        <p className=\"subtitle-lose\">Time's up You lose!!</p>\n      ) : (\n        <>\n          <p className=\"subtitle\">Try to submit the answer:</p>\n          <div className=\"input\">\n            <input ref={inputRef} placeholder={\"try to typing\"} />\n            <button\n              onClick={() => {\n                const value = inputRef.current.value;\n                const isAnswerMatch = () => {\n                  switch (value) {\n                    case decodeS():\n                    case decodeX():\n                      return true;\n                    default:\n                      return false;\n                  }\n                };\n                if (isAnswerMatch()) {\n                  alert(`恭喜答對！ 請到『${decodeX()}』贖回遺失物`);\n                } else {\n                  alert(\"哭哭 答錯了哦~!\");\n                }\n              }}\n            >\n              Submit\n            </button>\n          </div>\n        </>\n      )}\n    </StyledApp>\n  );\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\nreportWebVitals();\n"],"sourceRoot":""}